rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
    }
    
    // Legal audit trail - CRITICAL: Write-only for users, no deletion
    match /legal_audit/{document} {
      allow read: if isAdmin() || 
        (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create: if true; // Anyone can create (for legal acceptance)
      allow update: if false; // No updates allowed (immutable audit trail)
      allow delete: if false; // No deletion allowed (legal requirement)
    }
    
    // Anonymous legal audit (pre-authentication)
    match /legal_audit_anonymous/{document} {
      allow read: if isAdmin();
      allow create: if true; // Anyone can create
      allow update: if isAdmin() && 
        request.resource.data.keys().hasOnly(['linkedUserId']); // Only link user
      allow delete: if false; // No deletion allowed
    }
    
    // Purchase audit trail
    match /purchase_audit/{document} {
      allow read: if isAdmin() || 
        (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update: if false; // Immutable
      allow delete: if false; // No deletion
    }
    
    // Game data
    match /game_data/{userId} {
      allow read: if true; // Public leaderboards
      allow write: if isOwner(userId);
    }
    
    // Leaderboards
    match /leaderboards/{document} {
      allow read: if true; // Public
      allow write: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Admin panel access
    match /admin/{document} {
      allow read, write: if isAdmin();
    }
    
    // Shop transactions
    match /transactions/{transactionId} {
      allow read: if isAdmin() || 
        (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Immutable transaction log
    }
    
    // Ban list
    match /banned_users/{userId} {
      allow read: if true; // Public to prevent banned user access
      allow write: if isAdmin();
    }
    
    // System configuration (read-only for users)
    match /config/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}